<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roy Blogdown</title>
    <link>/</link>
    <description>Recent content on Roy Blogdown</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Coronavirus</title>
      <link>/2020/07/17/coronavirus/</link>
      <pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/07/17/coronavirus/</guid>
      <description>library(tidyverse)## -- Attaching packages ------------------------------------------------- tidyverse 1.3.0 --## v ggplot2 3.3.0 v purrr 0.3.4## v tibble 3.0.1 v dplyr 0.8.5## v tidyr 1.0.3 v stringr 1.4.0## v readr 1.3.1 v forcats 0.5.0## -- Conflicts ---------------------------------------------------- tidyverse_conflicts() --## x dplyr::filter() masks stats::filter()## x dplyr::lag() masks stats::lag()library(lubridate)## ## Attaching package: &amp;#39;lubridate&amp;#39;## The following objects are masked from &amp;#39;package:dplyr&amp;#39;:## ## intersect, setdiff, union## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## date, intersect, setdiff, unionlibrary(httr)covid_raw &amp;lt;- read.</description>
    </item>
    
    <item>
      <title>Climate change data</title>
      <link>/2020/07/16/climate-change-data/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/07/16/climate-change-data/</guid>
      <description>Climate change datadata sourced from the World Bank using WDI R package api.
#library(Quandl)#library(wbstats)#library(rWBclimate)#library(WDI)#library(tidyverse)#WDIsearch(&amp;quot;gdp&amp;quot;)#&amp;quot;EN.ATM.GHGT.KT.CE&amp;quot;#dat = WDI(indicator=&amp;quot;EN.ATM.GHGT.KT.CE&amp;quot;, #country=c(&amp;#39;CN&amp;#39;,&amp;#39;US&amp;#39;,&amp;#39;IN&amp;#39;,&amp;#39;RU&amp;#39;,&amp;#39;JP&amp;#39;,&amp;#39;GB&amp;#39;,&amp;#39;FR&amp;#39;,&amp;#39;DE&amp;#39;), start=1970)#gdp &amp;lt;- WDI(indicator = c(&amp;quot;gdp_per_capita&amp;quot; = &amp;quot;NY.GDP.PCAP.KD&amp;quot;,# &amp;quot;population&amp;quot; = &amp;quot;SP.POP.TOTL&amp;quot;))#dat %&amp;gt;% # ggplot(aes(year, EN.ATM.GHGT.KT.CE, color = country))+# geom_line()+# scale_y_log10(labels=scales::number_format())+# theme_void()+# theme(axis.text.x = element_text(),axis.text.y = element_text(),legend.position = #&amp;quot;bottom&amp;quot;)#data &amp;lt;- dat %&amp;gt;% # group_by(year) %&amp;gt;% # summarise(total_emissions = sum(EN.</description>
    </item>
    
    <item>
      <title>Time-series and yfinance api</title>
      <link>/2020/07/07/time-series-and-yfinance-api/</link>
      <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/07/07/time-series-and-yfinance-api/</guid>
      <description>Python integration using the reticulate package.
yFinance api from https://pypi.org/project/yfinance/
“Global stocks have worst day in two years as coronavirus fears spread” - FT 24th Feb 2020https://www.ft.com/content/5ec9aeae-56a1-11ea-a528-dd0f971febbc
Car industry financial analysisA profitability decomposition analysis with a focus on Tesla (TSLA)
Investigating industry ROCEFerrari has a wildy changing ROCE value over the investigation period so will removed for this analysis.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sun, 05 Jul 2020 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>Roy Blogdown
This site was built using the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.</description>
    </item>
    
    <item>
      <title>Metallurgical data</title>
      <link>/2020/07/03/compositional-analysis/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/07/03/compositional-analysis/</guid>
      <description>divide01 &amp;lt;- function(x){return(x/100)}data &amp;lt;- read.csv(&amp;quot;hardness.csv&amp;quot;) %&amp;gt;% mutate(Al=divide01(Al),Co=divide01(Co),Cr=divide01(Cr),Cu=divide01(Cu),Fe=divide01(Fe),Ni=divide01(Ni))data_ordered &amp;lt;- read.csv(&amp;quot;hardness.csv&amp;quot;) %&amp;gt;% mutate(Al=divide01(Al),Co=divide01(Co),Cr=divide01(Cr),Cu=divide01(Cu),Fe=divide01(Fe),Ni=divide01(Ni)) %&amp;gt;% arrange(desc(hardness))closed &amp;lt;- clo(data, parts = 1:6,total=100)cx &amp;lt;- acomp(data, c(&amp;quot;Al&amp;quot;,&amp;quot;Co&amp;quot;,&amp;quot;Cr&amp;quot;))plot(cx)xc &amp;lt;- acomp(data, c(&amp;quot;Al&amp;quot;,&amp;quot;Co&amp;quot;,&amp;quot;Cr&amp;quot;,&amp;quot;Cu&amp;quot;,&amp;quot;Fe&amp;quot;,&amp;quot;Ni&amp;quot;))xc_ordered &amp;lt;- acomp(data_ordered, c(&amp;quot;Al&amp;quot;,&amp;quot;Co&amp;quot;,&amp;quot;Cr&amp;quot;,&amp;quot;Cu&amp;quot;,&amp;quot;Fe&amp;quot;,&amp;quot;Ni&amp;quot;))plot(xc)barplot.acomp(xc)Order of hardness desc
barplot.acomp(xc_ordered)Possibly drop copper and nickel
library(httr)raw_dd &amp;lt;- read.table(text=content(GET(&amp;quot;https://gist.githubusercontent.com/MrFlick/c1183c911bc5398105d4/raw/715868fba2d0d17a61a8081de17c468bbc525ab1/elements.txt&amp;quot;)), sep=&amp;quot;,&amp;quot;, header=TRUE) %&amp;gt;%mutate(ElementName=ifelse(ElementName==&amp;quot;Sulfer&amp;quot;,&amp;quot;Sulfur&amp;quot;,ElementName),ElementName=ifelse(ElementName==&amp;quot;Phosphorous&amp;quot;,&amp;quot;Phosphorus&amp;quot;,ElementName),ElementName=ifelse(ElementName==&amp;quot;Flourine&amp;quot;,&amp;quot;Fluorine&amp;quot;,ElementName))data &amp;lt;- read_xlsx(&amp;quot;melting_points.</description>
    </item>
    
    <item>
      <title>Bank transactions and ASDA</title>
      <link>/2020/07/02/bank-transactions-and-asda/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/07/02/bank-transactions-and-asda/</guid>
      <description>BBC News ggplot style exampleThis is an example article using the BBC News ggplot style package. Data is sourced from bank statements.
year2020 &amp;lt;- read_csv(&amp;quot;2019-2020.csv&amp;quot;)year2019 &amp;lt;- read_csv(&amp;quot;2018-2019.csv&amp;quot;)year2018 &amp;lt;- read_csv(&amp;quot;2017-2018.csv&amp;quot;)year2017 &amp;lt;- read_csv(&amp;quot;2016-2017.csv&amp;quot;)year2016 &amp;lt;- read_csv(&amp;quot;2015-2016.csv&amp;quot;)data &amp;lt;- year2020 %&amp;gt;% union_all(year2019) %&amp;gt;% union_all(year2018) %&amp;gt;% union_all(year2017) %&amp;gt;% union_all(year2016)colnames(data) &amp;lt;- c(&amp;quot;date&amp;quot;,&amp;quot;type&amp;quot;,&amp;quot;code&amp;quot;,&amp;quot;number&amp;quot;,&amp;quot;description&amp;quot;,&amp;quot;dr&amp;quot;,&amp;quot;cr&amp;quot;,&amp;quot;balance&amp;quot;)data &amp;lt;- data %&amp;gt;%mutate(date = dmy(date),year_month = as.numeric(paste(year(date), month(date), sep = &amp;quot;&amp;quot;))) %&amp;gt;% arrange(date)data_asda_wages &amp;lt;- data %&amp;gt;% filter(!</description>
    </item>
    
    <item>
      <title>Election2019</title>
      <link>/2020/07/01/bbc-style-ggplot/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/07/01/bbc-style-ggplot/</guid>
      <description>library(tidyverse)#setwd(&amp;quot;~/University/R/election2019&amp;quot;)library(readr)election &amp;lt;- read_csv(&amp;quot;HoC-2019GE-results-by-constituency.csv&amp;quot;) %&amp;gt;% mutate(con_p=con/valid_votes,lab_p=lab/valid_votes,brexit_p=brexit/valid_votes,ld_p=ld/valid_votes,snp_p=snp/valid_votes)Voting mix of the most populated constituenciesparty_colours &amp;lt;- c(&amp;quot;purple&amp;quot;, &amp;quot;dodgerblue&amp;quot;, &amp;quot;red&amp;quot;,&amp;quot;orange&amp;quot;,&amp;quot;yellow&amp;quot;)election %&amp;gt;% arrange(desc(valid_votes)) %&amp;gt;% mutate(constituency_name=fct_reorder(constituency_name,con_p)) %&amp;gt;% head(30) %&amp;gt;% gather(key=&amp;quot;Party&amp;quot;, value=&amp;quot;Number&amp;quot;, con, lab, ld, snp, brexit) %&amp;gt;% ggplot(aes(constituency_name,Number,fill=Party))+geom_col()+scale_fill_manual(values=party_colours)+coord_flip()+bbc_style()Voting mix of the least populated constituencieselection %&amp;gt;% arrange(valid_votes) %&amp;gt;% mutate(constituency_name=fct_reorder(constituency_name,valid_votes)) %&amp;gt;% head(30) %&amp;gt;% gather(key=&amp;quot;Party&amp;quot;, value=&amp;quot;Number&amp;quot;, con, lab, ld, snp, brexit) %&amp;gt;% ggplot(aes(constituency_name,Number,fill=Party))+geom_col()+scale_fill_manual(values=party_colours)+coord_flip()+bbc_style()Where are the Conservative strongholds?</description>
    </item>
    
    <item>
      <title>Recent grads</title>
      <link>/2020/07/01/recent-grads/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/07/01/recent-grads/</guid>
      <description>Exploatory data analysismajors_processed %&amp;gt;%count(Major_category, sort = T)## # A tibble: 16 x 2## Major_category n## &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;## 1 Engineering 29## 2 Education 16## 3 Humanities &amp;amp; Liberal Arts 15## 4 Biology &amp;amp; Life Science 14## 5 Business 13## 6 Health 12## 7 Computers &amp;amp; Mathematics 11## 8 Agriculture &amp;amp; Natural Resources 10## 9 Physical Sciences 10## 10 Psychology &amp;amp; Social Work 9## 11 Social Science 9## 12 Arts 8## 13 Industrial Arts &amp;amp; Consumer Services 7## 14 Law &amp;amp; Public Policy 5## 15 Communications &amp;amp; Journalism 4## 16 Interdisciplinary 1by_major_category &amp;lt;- majors_processed %&amp;gt;% filter(!</description>
    </item>
    
  </channel>
</rss>